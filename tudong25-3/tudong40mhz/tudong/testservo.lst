CCS PCH C Compiler, Version 5.015, 41519               26-Mar-14 12:25

               Filename:   F:\Robocon 2014\Lap trinh design\LAP TRINH ROBOT TU DONG\tudong25-3\tudong40mhz\tudong\testservo.lst

               ROM used:   312 bytes (2%)
                           Largest free fragment is 16068
               RAM used:   25 (3%) at main() level
                           26 (3%) worst case
               Stack used: 2 locations (1 in main + 1 for interrupts)
               Stack size: 31

*
0000:  GOTO   00E0
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  FF2.5
004A:  GOTO   0054
004E:  BTFSC  FF2.2
0050:  GOTO   0096
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... #include <testservo.h> 
.................... #include <18F4431.h> 
.................... //////////// Standard Header file for the PIC18F4431 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC18F4431 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... //#FUSES WDT128                   //Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=20000000) 
*
00BA:  CLRF   FEA
00BC:  MOVLW  19
00BE:  MOVWF  FE9
00C0:  MOVF   FEF,W
00C2:  BZ    00DE
00C4:  MOVLW  06
00C6:  MOVWF  01
00C8:  CLRF   00
00CA:  DECFSZ 00,F
00CC:  BRA    00CA
00CE:  DECFSZ 01,F
00D0:  BRA    00C8
00D2:  MOVLW  7B
00D4:  MOVWF  00
00D6:  DECFSZ 00,F
00D8:  BRA    00D6
00DA:  DECFSZ FEF,F
00DC:  BRA    00C4
00DE:  RETURN 0
....................  
....................  
....................  
.................... ///// NGAT TIMER0 
.................... volatile int8 demservo, xungleo=0; 
.................... #int_timer0 
.................... void ngat_timer0(void)  
....................    { 
....................    set_timer0(5); 
*
0096:  CLRF   FD7
0098:  MOVLW  05
009A:  MOVWF  FD6
....................    demservo++; 
009C:  INCF   16,F
....................    if (demservo>=200) 
009E:  MOVF   16,W
00A0:  SUBLW  C7
00A2:  BC    00AA
....................       { 
....................       demservo=0; 
00A4:  CLRF   16
....................       output_high(pin_d1); 
00A6:  BCF    F95.1
00A8:  BSF    F8C.1
....................       } 
....................    if (demservo >=xungleo) output_low(pin_d1); 
00AA:  MOVF   17,W
00AC:  SUBWF  16,W
00AE:  BNC   00B4
00B0:  BCF    F95.1
00B2:  BCF    F8C.1
00B4:  BCF    FF2.2
00B6:  GOTO   0054
....................    } 
....................       
....................  
.................... void main() 
*
00E0:  CLRF   FF8
00E2:  BCF    FD0.7
00E4:  BSF    07.7
00E6:  CLRF   17
00E8:  BCF    FB9.0
00EA:  BCF    FC1.6
00EC:  BCF    FC1.7
00EE:  MOVLW  00
00F0:  MOVWF  FB8
.................... { 
....................    enable_interrupts(int_timer0); 
00F2:  BSF    FF2.5
....................     
....................    enable_interrupts(GLOBAL); 
00F4:  MOVLW  C0
00F6:  IORWF  FF2,F
....................   
....................    clear_interrupt(int_timer0); 
00F8:  BCF    FF2.2
....................     
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_2|RTCC_8_bit);      //102 us overflow 
00FA:  MOVWF  FD5
....................    set_timer0(5); 
00FC:  CLRF   FD7
00FE:  MOVLW  05
0100:  MOVWF  FD6
....................  
....................    while(TRUE) 
....................    { 
....................       //TODO: User Code 
....................       xungleo=10; 
0102:  MOVLW  0A
0104:  MOVWF  17
....................       delay_ms(3000); 
0106:  MOVLW  0C
0108:  MOVWF  18
010A:  MOVLW  FA
010C:  MOVWF  19
010E:  RCALL  00BA
0110:  DECFSZ 18,F
0112:  BRA    010A
....................       xungleo=15; 
0114:  MOVLW  0F
0116:  MOVWF  17
....................       delay_ms(3000); 
0118:  MOVLW  0C
011A:  MOVWF  18
011C:  MOVLW  FA
011E:  MOVWF  19
0120:  RCALL  00BA
0122:  DECFSZ 18,F
0124:  BRA    011C
....................       xungleo=20; 
0126:  MOVLW  14
0128:  MOVWF  17
....................       delay_ms(3000); 
012A:  MOVLW  0C
012C:  MOVWF  18
012E:  MOVLW  FA
0130:  MOVWF  19
0132:  RCALL  00BA
0134:  DECFSZ 18,F
0136:  BRA    012E
0138:  BRA    0102
....................    } 
....................  
.................... } 
013A:  SLEEP 

Configuration Fuses:
   Word  1: C200   HS FCMEN IESO
   Word  2: 3E0C   PUT NOBROWNOUT BORV20 NOWDT WDT32768 NOWINEN
   Word  3: 9D3C   NOPWMPIN LPOL_HIGH HPOL_HIGH T1LOWPOWER FLTAC1 SSP_RC PWM4B5 EXCLKC3 MCLR
   Word  4: 0081   STVREN NOLVP NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
