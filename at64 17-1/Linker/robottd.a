;/*****************************************************
;Chip type               : ATmega64
;Program type            : Application
;AVR Core Clock frequency: 11.059200 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 1024
;*****************************************************/
;#include <mega64.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;// Alphanumeric LCD Module functions
;#include <alcd.h>
;void lcd_putnum (long int so,unsigned char x,unsigned char y)
; 0000 000E {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000F    long int a, b, c, d, e;
; 0000 0010    lcd_gotoxy (x, y) ;
;PCODE: $0000000F VOL: 0
;	so -> Y+22
;	x -> Y+21
;	y -> Y+20
;	a -> Y+16
;	b -> Y+12
;	c -> Y+8
;	d -> Y+4
;	e -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0011    if (so<0) {lcd_putsf("-"); so=-so; }
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0012    a = so / 10000;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0013    b = (so - 10000 * a) / 1000;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0014    c = (so - 10000 * a - 1000 * b) / 100;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0015    d = (so - 10000 * a - 1000 * b - 100 * c) / 10;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0016    e = so - 10000 * a - 1000 * b - 100 * c - 10 * d;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0017    if(so>10000)  lcd_putchar (a + 48) ;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0018    if(so>1000) lcd_putchar (b + 48) ;
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0019    if(so>100) lcd_putchar (c + 48) ;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 001A    if(so>10) lcd_putchar (d + 48) ;
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 001B    lcd_putchar (e + 48) ;
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 001C }
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;
;// CHUONG TRINH DOC TAY GAME PS2
;#define DATA PINB.3 // dây 1 màu nâu (chan DI)
;#define CMD PORTB.2 // dây 2 màu cam (chan DO)
;#define CLK PORTB.1 // dây 7 xanh da tr?i (chan CLK)
;#define ATT PORTB.0 // dây 6 màu vàng (chan CS)
;#define DDRDATA DDRB.3
;#define DDRCMD DDRB.2
;#define DDRCLK DDRB.1
;#define DDRATT DDRB.0
;volatile unsigned char PES[6],analog;
;volatile unsigned char L1,R1,L2,R2,L,R,start,select,up,down,left,right,nut3,nut2,nut4,nut1;
;unsigned char access(unsigned char tbyte)
; 0000 002A {
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 002B unsigned char rbyte=0;
; 0000 002C unsigned int j;
; 0000 002D CLK=1;
;PCODE: $00000095 VOL: 0
;	tbyte -> Y+4
;	rbyte -> R17
;	j -> R18,R19
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 002E for(j=0;j<8;j++)
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 002F {
; 0000 0030 CMD=tbyte&0x01;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 0031 delay_us(100);
;PCODE: $000000AD VOL: 0
; 0000 0032 CLK=0;
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 0033 delay_us(100);
;PCODE: $000000B0 VOL: 0
; 0000 0034 rbyte=(rbyte>>1)|(DATA<<7);
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 0035 CLK=1;
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 0036 tbyte=tbyte>>1;
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 0037 }
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 0038 delay_us(100);
;PCODE: $000000C6 VOL: 0
; 0000 0039 return rbyte;
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 003A CLK=1;
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 003B }
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;void DOCPS2(void)
; 0000 003D {
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 003E DDRDATA=0;
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 003F DDRCMD=DDRCLK=DDRATT=1;
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 0040 ATT=1;
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 0041 PES[2]=PES[3]=PES[4]=PES[5]=128;
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 1
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 1
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 1
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 1
;PCODE: $000000E5 VOL: 0
; 0000 0042 analog=128;
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 1
; 0000 0043 ATT=0;
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 0044 access(0x01);
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 0045 analog=access(0x42);
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 1
; 0000 0046 access(0);
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 0047 PES[0]=access(0);
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 1
; 0000 0048 PES[1]=access(0);
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 1
;PCODE: $000000FC VOL: 0
; 0000 0049 if(analog==0x73||0x23||0X53)
;PCODE: $000000FD VOL: 1
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 004A {
; 0000 004B PES[2]=access(0);
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 1
;PCODE: $0000010C VOL: 0
; 0000 004C PES[3]=access(0);
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 1
;PCODE: $00000111 VOL: 0
; 0000 004D PES[4]=access(0);
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 1
;PCODE: $00000116 VOL: 0
; 0000 004E PES[5]=access(0);
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 1
;PCODE: $0000011B VOL: 0
; 0000 004F }
; 0000 0050 if(analog==0x12)
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 1
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
; 0000 0051 {
; 0000 0052 PES[2]=access(0);
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 1
;PCODE: $00000124 VOL: 0
; 0000 0053 PES[3]=access(0);
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 1
;PCODE: $00000129 VOL: 0
; 0000 0054 }
; 0000 0055 ATT=1;
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 0056 
; 0000 0057 select = PES[0]&0x01;
;PCODE: $0000012D VOL: 1
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 1
; 0000 0058 L = (PES[0]&0x02)/2;
;PCODE: $00000130 VOL: 1
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 1
; 0000 0059 R = (PES[0]&0x04)/4;
;PCODE: $00000137 VOL: 1
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 1
; 0000 005A start = (PES[0]&0x08)/8;
;PCODE: $0000013E VOL: 1
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 1
; 0000 005B 
; 0000 005C up = (PES[0]&0x10)/16;
;PCODE: $00000145 VOL: 1
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 1
; 0000 005D right = (PES[0]&0x20)/32;
;PCODE: $0000014C VOL: 1
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 1
; 0000 005E down = (PES[0]&0x40)/64;
;PCODE: $00000153 VOL: 1
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 1
; 0000 005F left = (PES[0]&0x80)/128;
;PCODE: $0000015A VOL: 1
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 1
; 0000 0060 
; 0000 0061 L2 = (PES[1]&0x01);
;PCODE: $00000161 VOL: 1
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 1
; 0000 0062 R2 = (PES[1]&0x02)/2;
;PCODE: $00000165 VOL: 1
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 1
; 0000 0063 L1 = (PES[1]&0x04)/4;
;PCODE: $0000016D VOL: 1
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 1
; 0000 0064 R1 = (PES[1]&0x08)/8;
;PCODE: $00000175 VOL: 1
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 1
; 0000 0065 
; 0000 0066 nut1 = (PES[1]&0x10)/16;
;PCODE: $0000017D VOL: 1
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 1
; 0000 0067 nut2 = (PES[1]&0x20)/32;
;PCODE: $00000185 VOL: 1
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 1
; 0000 0068 nut3 = (PES[1]&0x40)/64;
;PCODE: $0000018D VOL: 1
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 1
; 0000 0069 nut4 = (PES[1]&0x80)/128;
;PCODE: $00000195 VOL: 1
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 1
; 0000 006A }
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;
;// External Interrupt 0 service routine
;#define ddrkenha1 DDRD.0=0
;#define ddrkenhb1 DDRD.1=0
;#define kenhb1 PIND.1
;volatile long int ENDATA1=0;
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 0072 {
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
; 0000 0073 // Place your code here
; 0000 0074 if (kenhb1==0) {ENDATA1++;} else {ENDATA1--;}
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 1
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 1
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
; 0000 0075 }
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;
;// External Interrupt 2 service routine
;#define ddrkenha2 DDRD.2=0
;#define ddrkenhb2 DDRD.3=0
;#define kenhb2 PIND.3
;volatile long int ENDATA2=0;
;interrupt [EXT_INT2] void ext_int2_isr(void)
; 0000 007D {
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
; 0000 007E // Place your code here
; 0000 007F if (kenhb2==0) {ENDATA2++;} else {ENDATA2--;}
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 1
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 1
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
; 0000 0080 }
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;
;// CHUONG TRINH DIEU KHIEN DONG CO 1
;#define DDRBRA1 DDRE.6
;#define DDRDIR1 DDRB.4
;#define DDRPWMDC1 DDRB.5
;#define BRA1 PORTE.6
;#define DIR1 PORTB.4
;#define PWMDC1 OCR1A
;void DC1THUAN(long int xung)
; 0000 008A {
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
; 0000 008B DDRBRA1=1;
;	xung -> Y+0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
; 0000 008C DDRDIR1=1;
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
; 0000 008D DDRPWMDC1=1;
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
; 0000 008E BRA1=0;
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
; 0000 008F DIR1=0;
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
; 0000 0090 PWMDC1=xung;
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
; 0000 0091 }
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;void DC1NGUOC(long int xung)
; 0000 0093 {
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
; 0000 0094 DDRBRA1=1;
;	xung -> Y+0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
; 0000 0095 DDRDIR1=1;
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
; 0000 0096 DDRPWMDC1=1;
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
; 0000 0097 BRA1=0;
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
; 0000 0098 DIR1=1;
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
; 0000 0099 PWMDC1=xung;
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
; 0000 009A }
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;void RESDC1()
; 0000 009C {
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
; 0000 009D DDRBRA1=1;
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
; 0000 009E DDRDIR1=1;
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
; 0000 009F DDRPWMDC1=1;
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
; 0000 00A0 BRA1=1;
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
; 0000 00A1 DIR1=0;
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
; 0000 00A2 PWMDC1=0;
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
; 0000 00A3 }
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;
;// CHUONG TRINH DIEU KHIEN DONG CO 2
;#define DDRBRA2 DDRE.7
;#define DDRDIR2 DDRB.7
;#define DDRPWMDC2 DDRB.6
;#define BRA2 PORTE.7
;#define DIR2 PORTB.7
;#define PWMDC2 OCR1B
;void DC2THUAN(long int xung)
; 0000 00AD {
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
; 0000 00AE DDRBRA2=1;
;	xung -> Y+0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
; 0000 00AF DDRDIR2=1;
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
; 0000 00B0 DDRPWMDC2=1;
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
; 0000 00B1 BRA2=0;
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
; 0000 00B2 DIR2=0;
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
; 0000 00B3 PWMDC2=xung;
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
; 0000 00B4 }
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;void DC2NGUOC(long int xung)
; 0000 00B6 {
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
; 0000 00B7 DDRBRA2=1;
;	xung -> Y+0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
; 0000 00B8 DDRDIR2=1;
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
; 0000 00B9 DDRPWMDC2=1;
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
; 0000 00BA BRA2=0;
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
; 0000 00BB DIR2=1;
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
; 0000 00BC PWMDC2=xung;
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
; 0000 00BD }
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;void RESDC2()
; 0000 00BF {
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
; 0000 00C0 DDRBRA2=1;
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
; 0000 00C1 DDRDIR2=1;
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 00C2 DDRPWMDC2=1;
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
; 0000 00C3 BRA2=1;
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
; 0000 00C4 DIR2=0;
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
; 0000 00C5 PWMDC2=0;
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
; 0000 00C6 }
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;
;//PID DONG CO 1 //////////////////
;volatile long int ERR1=0, REALVT1=0;
;void PIDDC1(volatile long int SETVT1)
; 0000 00CB      {
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
; 0000 00CC      REALVT1=ENDATA1;
;	SETVT1 -> Y+0
;PCODE: $0000022B VOL: 1
;PCODE: $0000022C VOL: 1
; 0000 00CD      if (REALVT1 < SETVT1)
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 1
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
; 0000 00CE           {
; 0000 00CF           ERR1=SETVT1-REALVT1;
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 1
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 1
; 0000 00D0           if (ERR1>500) {DC1THUAN(500);} else {DC1THUAN(ERR1+50);}
;PCODE: $00000235 VOL: 1
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 1
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
; 0000 00D1           }
; 0000 00D2      if (REALVT1 > SETVT1)
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 1
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
; 0000 00D3           {
; 0000 00D4           ERR1=REALVT1-SETVT1;
;PCODE: $00000247 VOL: 1
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 1
; 0000 00D5           if (ERR1>500) {DC1NGUOC(500);} else {DC1NGUOC(ERR1+50);}
;PCODE: $0000024B VOL: 1
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 1
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
; 0000 00D6           }
; 0000 00D7      if (REALVT1 == SETVT1) { RESDC1();}
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 1
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
; 0000 00D8      }
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;
;//PID DONG CO 2
;volatile long int ERR2=0, REALVT2=0;
;void PIDDC2(volatile long int SETVT2)
; 0000 00DD      {
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
; 0000 00DE      REALVT2=ENDATA2;
;	SETVT2 -> Y+0
;PCODE: $00000264 VOL: 1
;PCODE: $00000265 VOL: 1
; 0000 00DF      if (REALVT2 < SETVT2)
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 1
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
; 0000 00E0           {
; 0000 00E1           ERR2=SETVT2-REALVT2;
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 1
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 1
; 0000 00E2           if (ERR2>500) {DC2THUAN(500);} else {DC2THUAN(ERR1+50);}
;PCODE: $0000026E VOL: 1
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 1
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
; 0000 00E3           }
; 0000 00E4      if (REALVT2 > SETVT2)
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 1
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
; 0000 00E5           {
; 0000 00E6           ERR2=REALVT2-SETVT2;
;PCODE: $00000280 VOL: 1
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 1
; 0000 00E7           if (ERR1>500) {DC2NGUOC(500);} else {DC2NGUOC(ERR1+50);}
;PCODE: $00000284 VOL: 1
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 1
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
; 0000 00E8           }
; 0000 00E9      if (REALVT2 == SETVT2) { RESDC2();}
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 1
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
; 0000 00EA      }
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;
;// NGAT TIMER0 DE PID
;volatile long int SETVT1=0, SETVT2=0;
;interrupt [TIM0_COMP] void timer0_comp_isr(void)
; 0000 00EF {
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
; 0000 00F0 #asm("cli");
;PCODE: $0000029D VOL: 0
	cli
;PCODE: $0000029E VOL: 0
; 0000 00F1 PIDDC1(SETVT1);
;PCODE: $0000029F VOL: 1
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
; 0000 00F2 PIDDC2(SETVT2);
;PCODE: $000002A2 VOL: 1
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
; 0000 00F3 #asm("sei");
;PCODE: $000002A5 VOL: 0
	sei
;PCODE: $000002A6 VOL: 0
; 0000 00F4 }
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;
;// CHUONG TRINH BEEP LOA
;void BEEP()
; 0000 00F8      {
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
; 0000 00F9      DDRC.7=1;
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
; 0000 00FA      PORTC.7=0;
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
; 0000 00FB      delay_ms(30);
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
; 0000 00FC      PORTC.7=1;
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
; 0000 00FD      delay_ms(70);
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
; 0000 00FE      }
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;
;// CHUONG TRINH CHINH
;char i;
;#define DDRVAN_T1 DDRA.0
;#define VAN_T1 PORTA.0
;#define DDRVAN_T2 DDRA.1
;#define VAN_T2 PORTA.1
;#define DDRVAN_G DDRA.2
;#define VAN_G PORTA.2
;#define DDRVAN_L DDRA.3
;#define VAN_L PORTA.3
;#define DDRVAN_D DDRA.4
;#define VAN_D PORTA.4
;
;#define DDRCTHT1 DDRD.5
;#define CTHT1 PING.2
;#define DDRCTHT2 DDRD.7
;#define CTHT2 PING.4
;#define DDRTAY1 DDRD.4
;#define TAY1 PING.1
;#define DDRTAY2 DDRD.6
;#define TAY2 PING.3
;
;void main(void)
; 0000 0117 {
;PCODE: $000002BA VOL: 0
; 0000 0118 // Timer/Counter 0 initialization
; 0000 0119 // Clock source: System Clock
; 0000 011A // Clock value: 10.800 kHz   CHU KY XUNG 0.926 MS
; 0000 011B // Mode: Normal top=0xFF
; 0000 011C // OC0 output: Disconnected
; 0000 011D ASSR=0x00;
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
; 0000 011E TCCR0=0x07;
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
; 0000 011F TCNT0=0x00;
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
; 0000 0120 OCR0=0x0B;
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
; 0000 0121 
; 0000 0122 // Timer/Counter 1 initialization
; 0000 0123 // Clock source: System Clock
; 0000 0124 // Clock value: 1382.400 kHz
; 0000 0125 // Mode: Fast PWM top=ICR1
; 0000 0126 // OC1A output: Non-Inv.
; 0000 0127 // OC1B output: Non-Inv.
; 0000 0128 // OC1C output: Discon.
; 0000 0129 // Noise Canceler: Off
; 0000 012A // Input Capture on Falling Edge
; 0000 012B // Timer1 Overflow Interrupt: Off
; 0000 012C // Input Capture Interrupt: Off
; 0000 012D // Compare A Match Interrupt: Off
; 0000 012E // Compare B Match Interrupt: Off
; 0000 012F // Compare C Match Interrupt: Off
; 0000 0130 TCCR1A=0xA2;
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
; 0000 0131 TCCR1B=0x1A;
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
; 0000 0132 TCNT1H=0x00;
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
; 0000 0133 TCNT1L=0x00;
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
; 0000 0134 ICR1H=0x03;
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
; 0000 0135 ICR1L=0xE8;
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
; 0000 0136 OCR1AH=0x00;
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
; 0000 0137 OCR1AL=0x00;
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
; 0000 0138 OCR1BH=0x00;
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
; 0000 0139 OCR1BL=0x00;
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
; 0000 013A OCR1CH=0x00;
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
; 0000 013B OCR1CL=0x00;
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
; 0000 013C 
; 0000 013D // Timer/Counter 2 initialization
; 0000 013E // Clock source: System Clock
; 0000 013F // Clock value: Timer2 Stopped
; 0000 0140 // Mode: Normal top=0xFF
; 0000 0141 // OC2 output: Disconnected
; 0000 0142 TCCR2=0x00;
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
; 0000 0143 TCNT2=0x00;
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
; 0000 0144 OCR2=0x00;
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
; 0000 0145 
; 0000 0146 // Timer/Counter 3 initialization
; 0000 0147 // Clock source: System Clock
; 0000 0148 // Clock value: Timer3 Stopped
; 0000 0149 // Mode: Normal top=0xFFFF
; 0000 014A // OC3A output: Discon.
; 0000 014B // OC3B output: Discon.
; 0000 014C // OC3C output: Discon.
; 0000 014D // Noise Canceler: Off
; 0000 014E // Input Capture on Falling Edge
; 0000 014F // Timer3 Overflow Interrupt: Off
; 0000 0150 // Input Capture Interrupt: Off
; 0000 0151 // Compare A Match Interrupt: Off
; 0000 0152 // Compare B Match Interrupt: Off
; 0000 0153 // Compare C Match Interrupt: Off
; 0000 0154 TCCR3A=0x00;
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
; 0000 0155 TCCR3B=0x00;
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
; 0000 0156 TCNT3H=0x00;
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
; 0000 0157 TCNT3L=0x00;
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
; 0000 0158 ICR3H=0x00;
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
; 0000 0159 ICR3L=0x00;
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
; 0000 015A OCR3AH=0x00;
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
; 0000 015B OCR3AL=0x00;
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
; 0000 015C OCR3BH=0x00;
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
; 0000 015D OCR3BL=0x00;
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
; 0000 015E OCR3CH=0x00;
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
; 0000 015F OCR3CL=0x00;
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
; 0000 0160 
; 0000 0161 // External Interrupt(s) initialization
; 0000 0162 // INT0: On
; 0000 0163 // INT0 Mode: Falling Edge
; 0000 0164 // INT1: Off
; 0000 0165 // INT2: On
; 0000 0166 // INT2 Mode: Falling Edge
; 0000 0167 // INT3: Off
; 0000 0168 // INT4: Off
; 0000 0169 // INT5: Off
; 0000 016A // INT6: Off
; 0000 016B // INT7: Off
; 0000 016C EICRA=0x22;
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
; 0000 016D EICRB=0x00;
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
; 0000 016E EIMSK=0x05;
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
; 0000 016F EIFR=0x05;
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
; 0000 0170 
; 0000 0171 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0172 TIMSK=0x00;
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
; 0000 0173 ETIMSK=0x00;
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
; 0000 0174 
; 0000 0175 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0176 //TIMSK=0x02; //////////CHO PHEP NGAT TIMER0 COMPARE MATH
; 0000 0177 //ETIMSK=0x00;
; 0000 0178 
; 0000 0179 // USART0 initialization
; 0000 017A // USART0 disabled
; 0000 017B UCSR0B=0x00;
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
; 0000 017C 
; 0000 017D // USART1 initialization
; 0000 017E // USART1 disabled
; 0000 017F UCSR1B=0x00;
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
; 0000 0180 
; 0000 0181 // Analog Comparator initialization
; 0000 0182 // Analog Comparator: Off
; 0000 0183 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0184 ACSR=0x80;
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
; 0000 0185 SFIOR=0x00;
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
; 0000 0186 
; 0000 0187 // ADC initialization
; 0000 0188 // ADC disabled
; 0000 0189 ADCSRA=0x00;
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
; 0000 018A 
; 0000 018B // SPI initialization
; 0000 018C // SPI disabled
; 0000 018D SPCR=0x00;
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
; 0000 018E 
; 0000 018F // TWI initialization
; 0000 0190 // TWI disabled
; 0000 0191 TWCR=0x00;
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
; 0000 0192 
; 0000 0193 // Alphanumeric LCD initialization
; 0000 0194 // Connections specified in the
; 0000 0195 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 0196 // RS - PORTC Bit 0
; 0000 0197 // RD - PORTC Bit 1
; 0000 0198 // EN - PORTC Bit 2
; 0000 0199 // D4 - PORTC Bit 3
; 0000 019A // D5 - PORTC Bit 4
; 0000 019B // D6 - PORTC Bit 5
; 0000 019C // D7 - PORTC Bit 6
; 0000 019D // Characters/line: 16
; 0000 019E lcd_init(16);
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
; 0000 019F lcd_putsf(" Ready.....");
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
; 0000 01A0 for (i=0; i<6; i++) {BEEP(); }
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
; 0000 01A1 lcd_clear();
;PCODE: $00000326 VOL: 0
; 0000 01A2 
; 0000 01A3 #asm("sei");
;PCODE: $00000327 VOL: 0
	sei
;PCODE: $00000328 VOL: 0
; 0000 01A4 while (1)
;PCODE: $00000329 VOL: 0
; 0000 01A5      {
; 0000 01A6      nut1=1;
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 1
; 0000 01A7      while (nut1==1) {DOCPS2(); lcd_putnum(ENDATA1,0,0); lcd_putnum(ENDATA2,8,0); delay_ms(100);}
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 1
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 1
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 1
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
; 0000 01A8           DDRCTHT1=0; CTHT1=1;
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
; 0000 01A9           nut1=1;
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 1
; 0000 01AA           BEEP();
;PCODE: $0000034B VOL: 0
; 0000 01AB           while (CTHT1==1) {DC1THUAN(400); lcd_putnum(ENDATA1,0,0); }
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 1
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
; 0000 01AC           RESDC1();
;PCODE: $0000035D VOL: 0
; 0000 01AD           for (i=0; i<3; i++) {BEEP(); }
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
; 0000 01AE 
; 0000 01AF      while (nut1==1) {DOCPS2(); lcd_putnum(ENDATA1,0,0); lcd_putnum(ENDATA2,8,0); delay_ms(100);}
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 1
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 1
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 1
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
;PCODE: $00000381 VOL: 0
; 0000 01B0           DDRCTHT2=0; CTHT2=1;
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
; 0000 01B1           nut1=1;
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 1
; 0000 01B2           BEEP();
;PCODE: $00000389 VOL: 0
; 0000 01B3           while (CTHT2==1) {DC2THUAN(400); lcd_putnum(ENDATA2,0,0); };
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 1
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
;          RESDC2();
;          for (i=0; i<3; i++) {BEEP(); }
; 0000 01B5 for (i=0; i<3; i++) {BEEP(); }
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
